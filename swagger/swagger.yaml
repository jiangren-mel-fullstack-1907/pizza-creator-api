openapi: 3.0.0
info:
  title: Pizza creator api
  version: 0.0.1
paths:
  '/orders/{id}':
    put:
      x-controller-name: OrderController
      x-operation-name: replaceById
      tags:
        - OrderController
      responses:
        '204':
          description: Order PUT success
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        x-parameter-index: 1
      operationId: OrderController.replaceById
    patch:
      x-controller-name: OrderController
      x-operation-name: updateById
      tags:
        - OrderController
      responses:
        '204':
          description: Order PATCH success
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderExcludingId'
        x-parameter-index: 1
      operationId: OrderController.updateById
    get:
      x-controller-name: OrderController
      x-operation-name: findById
      tags:
        - OrderController
      responses:
        '200':
          description: Order model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWithRelations'
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: OrderController.findById
    delete:
      x-controller-name: OrderController
      x-operation-name: deleteById
      tags:
        - OrderController
      responses:
        '204':
          description: Order DELETE success
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: OrderController.deleteById
  /orders:
    post:
      x-controller-name: OrderController
      x-operation-name: create
      tags:
        - OrderController
      responses:
        '200':
          description: Order model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      operationId: OrderController.create
    get:
      x-controller-name: OrderController
      x-operation-name: find
      tags:
        - OrderController
      responses:
        '200':
          description: Array of Order model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderWithRelations'
      operationId: OrderController.find
  '/toppings/{id}':
    put:
      x-controller-name: ToppingController
      x-operation-name: replaceById
      tags:
        - ToppingController
      responses:
        '204':
          description: Topping PUT success
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topping'
        x-parameter-index: 1
      operationId: ToppingController.replaceById
    patch:
      x-controller-name: ToppingController
      x-operation-name: updateById
      tags:
        - ToppingController
      responses:
        '204':
          description: Topping PATCH success
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToppingExcludingId'
        x-parameter-index: 1
      operationId: ToppingController.updateById
    get:
      x-controller-name: ToppingController
      x-operation-name: findById
      tags:
        - ToppingController
      responses:
        '200':
          description: Topping model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topping'
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: ToppingController.findById
    delete:
      x-controller-name: ToppingController
      x-operation-name: deleteById
      tags:
        - ToppingController
      responses:
        '204':
          description: Topping DELETE success
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: ToppingController.deleteById
  /toppings:
    post:
      x-controller-name: ToppingController
      x-operation-name: create
      tags:
        - ToppingController
      responses:
        '200':
          description: Topping model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topping'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToppingExcludingId'
      operationId: ToppingController.create
    get:
      x-controller-name: ToppingController
      x-operation-name: find
      tags:
        - ToppingController
      responses:
        '200':
          description: Array of Topping model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Topping'
      operationId: ToppingController.find
  '/pizzaSizes/{id}':
    put:
      x-controller-name: PizzaSizeController
      x-operation-name: replaceById
      tags:
        - PizzaSizeController
      responses:
        '204':
          description: PizzaSize PUT success
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PizzaSize'
        x-parameter-index: 1
      operationId: PizzaSizeController.replaceById
    patch:
      x-controller-name: PizzaSizeController
      x-operation-name: updateById
      tags:
        - PizzaSizeController
      responses:
        '204':
          description: PizzaSize PATCH success
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PizzaSizeExcludingId'
        x-parameter-index: 1
      operationId: PizzaSizeController.updateById
    get:
      x-controller-name: PizzaSizeController
      x-operation-name: findById
      tags:
        - PizzaSizeController
      responses:
        '200':
          description: PizzaSize model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PizzaSize'
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: PizzaSizeController.findById
    delete:
      x-controller-name: PizzaSizeController
      x-operation-name: deleteById
      tags:
        - PizzaSizeController
      responses:
        '204':
          description: PizzaSize DELETE success
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: PizzaSizeController.deleteById
  /pizzaSizes:
    post:
      x-controller-name: PizzaSizeController
      x-operation-name: create
      tags:
        - PizzaSizeController
      responses:
        '200':
          description: PizzaSize model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PizzaSize'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PizzaSizeExcludingId'
      operationId: PizzaSizeController.create
    get:
      x-controller-name: PizzaSizeController
      x-operation-name: find
      tags:
        - PizzaSizeController
      responses:
        '200':
          description: Array of PizzaSize model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PizzaSize'

      operationId: PizzaSizeController.find
  /users:
    post:
      x-controller-name: UserController
      x-operation-name: create
      tags:
        - UserController
      responses:
        '200':
          description: User model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserExcludingPassword'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserExcludingId'
      operationId: UserController.create
  /users/login:
    post:
      x-controller-name: UserController
      x-operation-name: login
      tags:
        - UserController
      responses:
        '200':
          description: User model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserExcludingPassword'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      operationId: UserController.login
servers:
  - url: 'http://localhost:3000'
components:
  schemas:
    Order:
      title: Order
      properties:
        id:
          type: string
        totalPrice:
          type: number
      required:
        - totalPrice
    'OrderExcludingId':
      title: 'OrderExcludingId'
      not:
        anyOf:
          - required:
              - id
      properties:
        totalPrice:
          type: number
      required:
        - totalPrice
    OrderWithRelations:
      title: OrderWithRelations
      properties:
        id:
          type: string
        pizzaSize: 
          $ref: '#/components/schemas/PizzaSize'
        customer:
          $ref: '#/components/schemas/User'
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        totalPrice:
          type: number
      required:
        - totalPrice
        - pizzaSize
        - customer
        - orderItems
    OrderRequest:
      title: OrderRequest
      not:
        anyOf:
          - required:
              - id
      properties:
        pizzaSize: 
          type: string
        customer:
          type: string
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemRequest'
        totalPrice:
          type: number
      required:
        - totalPrice
        - pizzaSize
        - customer
        - orderItems
    OrderItem:
      title: OrderItem
      properties:
        topping:
          $ref: '#/components/schemas/Topping'
        quantity:
          type: number
    OrderItemRequest:
      title: OrderItemRequest
      properties:
        topping:
          type: string
        quantity:
          type: number
    Topping:
      title: Topping
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
        icon:
          type: string
      required:
        - name
        - description
        - price
    'ToppingExcludingId':
      title: 'ToppingExcludingId'
      not:
        anyOf:
          - required:
              - id
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
        icon:
          type: string
      required:
        - name
        - description
        - price
    PizzaSize:
      title: PizzaSize
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
        icon:
          type: string
      required:
        - name
        - description
        - price
    'PizzaSizeExcludingId':
      title: 'PizzaSizeExcludingId'
      not:
        anyOf:
          - required:
              - id
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
        icon:
          type: string
      required:
        - name
        - description
        - price
    User:
      title: User
      properties:
        id:
          type: string
        name:
          type: string
        password:
          type: string
        email:
          type: string
        address:
          type: string
        phone:
          type: string
      required:
        - email
        - password
    UserLogin:
      title: UserLogin
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    'UserExcludingId':
      title: 'UserExcludingId'
      not:
        anyOf:
          - required:
              - id
              - address
      properties:
        name:
          type: string
        password:
          type: string
        email:
          type: string
        address:
          type: string
        phone:
          type: string
      required:
        - name
        - password
        - email
    'UserExcludingPassword':
      title: 'UserExcludingPassword'
      not:
        anyOf:
          - required:
              - password
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        address:
          type: string
        phone:
          type: string
      required:
        - name
        - email
        - address

